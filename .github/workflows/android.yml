name: Create Release

on: 
  push:
    branches:
      - release_*
  
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Get Version Number
      id: version_number
      uses: frabert/replace-string-action@v1.1
      with:
        string: ${{ github.ref }}
        pattern: 'refs/heads/release_'
        replace-with: ''
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version_number.outputs.replaced }}
        release_name: ${{ steps.version_number.outputs.replaced }}
        draft: true
        prerelease: if (contains(steps.version_number.outputs.replaced, 'alpha') || contains(steps.version_number_outputs.replaced, 'beta'))
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8    
    - name: Print Debug
      id: print_debug
      uses: ./.github/acions/print-debug
    - name: Dump PrintDebug context
      env:
        MY_OUTPUT: ${{ steps.print_debug.outputs.theOutput }}
      run: echo "$MY_OUTPUT"
    - name: Build with Gradle
      run: ./gradlew assembleDebug
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./app/build/outputs/apk/debug/GithubActionsDemo-${{ steps.version_number.outputs.replaced }}.apk
        asset_name: GithubActionsDemo-${{ steps.version_number.outputs.replaced }}.apk
        asset_content_type: application/vnd.android.package-archive
